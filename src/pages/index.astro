---

import '../styles/global.css'
import FechaRelativa from '../components/tsx/FechaRelativa'
import Layout from '../layouts/Layout.astro'
import Header from '../components/header.astro'
import Coment from '../icons/coment.astro'
import Discord from '../icons/discord.astro'
import TvAnime from '../icons/tvAnime.astro'
import Games from '../icons/games.astro'
import XTwiter from '../icons/XTwiter.astro'
import { getCollection } from 'astro:content'
import HeroImage from '../components/heroImage.astro'
import Arrow from '../icons/arrow.astro'
import { getEntry } from 'astro:content'
import Slidebar from '@/components/slidebar.astro'



const articles = (await getCollection('articles'))
  .filter(article => article.data.publishDate) // solo los que tienen fecha
  .sort((a, b) => {   
    const dateA = new Date(a.data.publishDate!).getTime();
    const dateB = new Date(b.data.publishDate!).getTime();
    return dateB - dateA; // más nuevo primero
  });


const limitedArticles = articles.slice(0, 4);
const limitArticles2 = articles.slice(4, 7);
const limitArticles3 = articles.slice(7, 10);
const limitArticles4 = articles.slice(10, 14);



// Función para truncar texto
function truncateText(text: string, maxLength = 100) {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength) + '...';
}

const title = 'Bienvenido a BlogZZtita';


// Supongamos que ya tienes la lista de artículos
const authors = await Promise.all(
  articles.map(async (article) => {
    const entry = await getEntry('authors', article.data.author.id);
    return entry?.data;
  })
);



---
<Layout title={title}>
  <main class="justify-center m-auto">
  <Header/>  

  <!-- Hero Section con Parallax -->
  <HeroImage/>
  
  <!-- Content Section -->
  <article class="container mx-auto py-12 px-4 md:px-6 lg:px-8 flex flex-col lg:flex-row justify-between gap-10 max-w-[1350px]">
    <!-- Main Content -->
    <section class="lg:w-2/3">
      <h2 class="text-3xl font-bold mb-8 border-b pb-4 text-white/80">Últimas noticias</h2>
      
      <!-- News Item 1 -->
      {limitedArticles.map(article => {
        const { slug, data } = article;
        const { title, img, description, categoryName, publishDate} = data;
        const truncatedDescription = truncateText(description, 120);
        return (
          <div class="flex flex-row mb-12 rounded-lg transition-shadow duration-300 overflow-hidden">
            {/* En móvil: texto a la izquierda, imagen a la derecha */}
            {/* En pantallas más grandes: imagen a la izquierda, texto a la derecha */}
            <div class="order-2 sm:order-1 md:order-1 w-1/3 sm:w-1/3 md:w-1/3">             
                <img src={img} alt={title!} class="w-full h-[120px] sm:h-[210px] md:h-[200px] lg:h-[210px] xl:h-[210px] rounded-[5px] object-cover" />
            </div>
            <div class="order-1 sm:order-2 md:order-2 w-2/3 sm:w-2/3 md:w-2/3 pl-0 sm:pl-4 md:pl-4 pt-1">
              <span class="inline-block text-purple-800 rounded-full text-sm font-medium">{categoryName}</span>
              <a href={`/noticias/${slug}`}>
              <h3 class="text-xl font-semibold text-white mb-3 hover:text-purple-400 transition-colors duration-300">{title}</h3>
              </a>
              <p class="text-gray-600 mb-2 sm:mb-4 text-sm sm:text-base">{truncatedDescription}</p>
              <div class="mb-2 flex items-center text-gray-500 text-sm p-0 m-auto">
                <Coment class="w-4 h-4 sm:w-5 sm:h-5" />
                <span class="mr-1">42</span>
                <span class="mr-1"> - </span>
                <FechaRelativa fechaISO={publishDate!.toISOString()} client:load />
              </div>
              <a href={`/autores/${article.data.author.id}`} class="text-gray-500 hover:text-purple-400 transition-colors duration-300">{article.data.author.id}</a>
            </div>
          </div>
        )
      })}
      <hr class="border-gray-200 my-10">
      <!-- Featured Cards Section -->
      <section class="flex flex-col md:flex-row gap-5 mb-12">

        {limitArticles2.map(article => {
          const { slug, data } = article;
          const { title, img, categoryName, publishDate } = data;
          return (
            <div class="rounded-lg relative overflow-hidden shadow-lg group w-[265px] h-[470px]">
              <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/40 to-black/80 z-10"></div>
              <img src={img} alt={title!} class="absolute inset-0 w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500" />
              <div class="absolute bottom-0 left-0 p-6 z-20 w-full">
                <span class="inline-block px-3 py-1 bg-purple-600/20 text-white rounded-full text-sm font-medium mb-3">{categoryName}</span>
                <a href={`/noticias/${slug}`}>
                <h3 class="text-xl font-semibold text-white mb-3 hover:text-purple-400 transition-colors duration-300">{title}</h3>
                </a>
                <div class="flex items-center text-white/80 text-sm">
                  <Coment class="w-5 h-5 mr-1"/>
                  <span class="mr-2">18</span>
                  <span class="mr-2">-</span>
                  <FechaRelativa fechaISO={publishDate!.toISOString()} client:load />
                </div>
                <a href={`/autores/${article.data.author.id}`} class="text-gray-500 hover:text-purple-400 transition-colors duration-300">{article.data.author.id}</a>
          </div>
        </div>
        )
      })}
        
        
      </section>
      <hr class="border-gray-200 my-10">

      <!-- News Item 2 -->
      <section class="mb-12">
        {limitArticles3.map(article => {
          const { slug, data } = article;
          const { title, img, description, categoryName, publishDate } = data;
          const truncatedDescription = truncateText(description, 120);
          return (
            <div class="flex flex-col md:flex-row mb-12 rounded-lg transition-shadow duration-300 overflow-hidden">
              <div class="md:w-1/3">
              
                <img src={img} alt={title} class="w-[275px] h-[200px] rounded-[5px] object-cover" />
              </div>
              <div class="pl-4 pt-1 md:w-2/3">
                <span class="inline-block  text-purple-800 rounded-full text-sm font-medium">{categoryName}</span>
                <a href={`/noticias/${slug}`}>
                <h3 class="text-2xl font-bold mb-1 text-white/80 hover:text-purple-400 transition-colors duration-300">{title}</h3>
                </a>
                <p class="text-gray-600 mb-4">{truncatedDescription}</p>
                <div class="flex items-center text-gray-500 text-sm">
                  <Coment class="w-5 h-5 mr-1" />
                  <span class="mr-4">42 comentarios</span>
                  <FechaRelativa fechaISO={publishDate!.toISOString()} client:load />
                </div>
                <a href={`/autores/${article.data.author.id}`} class="text-gray-500 hover:text-purple-400 transition-colors duration-300">{article.data.author.id}</a>
              </div>
            </div>
          )
        })}
      </section>

  
        
        
   

      <hr class="border-gray-200 my-10">


<section class="mb-10">
  <h2 class="text-2xl font-bold mb-6 text-white/80">Artículos destacados</h2>
  <div class="relative overflow-hidden group" id="article-slider">
    <!-- Slider container -->
    <div
      class="flex gap-4 overflow-x-auto pb-4 snap-x scroll-smooth scrollbar-hide" id="slider-track" style="-ms-overflow-style: none; scrollbar-width: none;">
      {
        limitArticles4.map(article => {
          const { slug, data } = article;
          const { title, img, categoryName } = data;
          return (
            <div class="snap-start shrink-0 w-72 h-56 bg-gray-900 rounded-lg flex items-center justify-center relative overflow-hidden ">
              <img src={img} alt={title} class="absolute w-full h-full object-cover opacity-60 transition-transform duration-300 hover:scale-105" />
              <div class="absolute inset-0 bg-gradient-to-b from-transparent to-black/70 z-10"></div>
              <div class="absolute bottom-0 left-0 p-4 z-20 text-white">
                <span class="text-sm font-medium text-purple-800">{categoryName}</span>
                <h3 class="font-bold text-lg hover:text-purple-400 transition-colors duration-300 cursor-pointer"><a href={`/noticias/${slug}`}>{title}</a></h3>
              </div>
              <a href={`/autores/${article.data.author.id}`} class="text-gray-500 hover:text-purple-400 transition-colors duration-300">{article.data.author.id}</a>
            </div>
          )
        })
      }
    </div>

    <!-- Navigation buttons -->
    <button
      class="absolute left-2 top-1/2 -translate-y-1/2 bg-gray-800/10  text-purple-800 hover:bg-purple-800/20 p-2 rounded-full shadow-md z-20"
      id="prevBtn"
      aria-label="Slide anterior"
    >
      <Arrow class="rotate-180"/>
    </button>
    <button
      class="absolute right-2 top-1/2 -translate-y-1/2 bg-gray-800/10  text-purple-800 hover:bg-purple-800/20 p-2 rounded-full shadow-md z-20"
      id="nextBtn"
      aria-label="Siguiente slide"
    >
    <Arrow/>
    </button>
  </div>
</section>


      

    </section>

    <!-- Sidebar -->
    <Slidebar/>
  </article>

  </main>
</Layout>
<script src="../components/parallax.js"></script>
<script src="../components/slider.js"></script>

